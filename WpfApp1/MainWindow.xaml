<Window x:Class="ConveyorApp.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:gu="https://github.com/JohanLarsson/Gu.Wpf" xmlns:local="clr-namespace:ConveyorApp"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mx="clr-namespace:WpfLib.MarkupExtensions;assembly=WpfLib"
        xmlns:system="clr-namespace:System;assembly=mscorlib" Name="TheWindow" Title="MainWindow"
        Width="614" Height="352" Closing="Window_Closing"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d">

    <Window.Resources>
        <local:SnapGridConverter x:Key="SnapGridConverter" />
        <Brush x:Key="SplitterColor">red</Brush>
        <Brush x:Key="BackgroundColor">green</Brush>
        <system:Double x:Key="SplitterSize">5</system:Double>

        <Style x:Key="CommonGridSplitter" TargetType="{x:Type GridSplitter}">
            <Setter Property="Background" Value="{StaticResource SplitterColor}" />
        </Style>
        <Style x:Key="HorizontalGridSplitter"
               BasedOn="{StaticResource CommonGridSplitter}"
               TargetType="{x:Type GridSplitter}">
            <Setter Property="Height" Value="{StaticResource SplitterSize}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="VerticalGridSplitter"
               BasedOn="{StaticResource CommonGridSplitter}"
               TargetType="{x:Type GridSplitter}">
            <Setter Property="Width" Value="{StaticResource SplitterSize}" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
    </Window.Resources>

    <Grid gu:Grid.Layout="auto * auto, * auto 130">
        <StackPanel Grid.ColumnSpan="3" gu:Cell.Index="0 0" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="0,0,10,0" />
                </Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="0,0,10,0" />
                </Style>
            </StackPanel.Resources>
            <Button Name="AddConveyorB" Content="\____/" Click="AddConveyorB_Click" ToolTip="Add Conveyor" />
            <Button Name="AddPointB" Content="." Click="AddPointB_Click" ToolTip="Add Point" />
            <Button Name="AddLineB" Content="_" Click="AddLineB_Click" ToolTip="Add Line" />
            <Button Name="AddFilletB" Content="U" Click="AddFilletB_Click" ToolTip="Add Fillet" />
            <Button Name="AddCircleCenterRadiusB" Content="O1" Click="AddCircleCenterRadiusB_Click"
                    ToolTip="Add Circle by Center+Circ Point" />
            <Button Name="AddCircle2PointsB" Content="O2" Click="AddCircle2PointsB_Click"
                    ToolTip="Add Circle by Diameter Points" />
            <Button Name="AddCircle3PointsB" Content="O3" Click="AddCircle3PointsB_Click"
                    ToolTip="Add Circle by Three Points" />
            <CheckBox Name="RunningCB" Content="Running" Checked="RunningCB_Click" Unchecked="RunningCB_Click" />
            <Button Name="PutItemB" Content="Put" Click="PutItemB_Click" ToolTip="Put Items" />
            <CheckBox Name="FirstOnlyCB" Content="FirstOnly" />
            <Button Name="MovePointB" Content="Move" Click="MovePointB_Click" />
            <CheckBox Name="SelectB" Content="Select"
                      IsChecked="{Binding SelectionManager.IsActive}" />
            <TextBox Name="LanesCountTB" Text="2" ToolTip="Lanes Count" />
            <TextBox Name="GridWidth" Width="30"
                     Text="{Binding Path=InputContext.SnapGridWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"
                     ToolTip="Grid Width" />
            <Button Name="HappyBirthdayRubyB" Content="Happy Birthday Ruby" Click="HappyBirthdayRubyB_Click" />
        </StackPanel>
        <TextBlock Name="NotesLabel" Grid.ColumnSpan="2" gu:Cell.Index="2 0" />
        <GridSplitter gu:Cell.Index="1 1" Style="{StaticResource VerticalGridSplitter}" />
        <Grid gu:Cell.Index="1 2" gu:Grid.Layout="20 auto * auto 40, *">
            <TextBlock gu:Cell.Index="0 0" Text="{Binding Path=SelectionManager.ChosenObject.Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}" />
            <GridSplitter Grid.Row="1" Style="{StaticResource HorizontalGridSplitter}" />
            <local:PropertyGrid x:Name="SelectedPG" gu:Cell.Index="2 0"
                                InspectedObject="{Binding SelectionManager.ChosenObject}" />
            <GridSplitter Grid.Row="3" Style="{StaticResource HorizontalGridSplitter}" />
            <avalonEdit:TextEditor Name="textEditor2" gu:Cell.Index="4 0" FontFamily="Fira Code" FontSize="5pt" SyntaxHighlighting="C#" />
        </Grid>
        <Grid gu:Cell.Index="1 0" gu:Grid.Layout="* auto auto, *">
            <ScrollViewer gu:Cell.Index="0 0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                <Canvas Name="TheCanvas" MouseDown="TheCanvas_MouseDown" MouseMove="TheCanvas_MouseMove"
                        MouseUp="TheCanvas_MouseUp" MouseWheel="TheCanvas_MouseWheel">
                    <Canvas.Background>
                        <DrawingBrush AlignmentX="Left" AlignmentY="Top" Stretch="None" TileMode="Tile" Viewport="-0.5, -0.5, 10, 10"
                                      ViewportUnits="Absolute">
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <DrawingGroup.Children>
                                        <GeometryDrawing Brush="{StaticResource BackgroundColor}">
                                            <GeometryDrawing.Geometry>
                                                <RectangleGeometry Rect="0, 0, 10, 10" />
                                            </GeometryDrawing.Geometry>
                                            <GeometryDrawing.Pen>
                                                <Pen Brush="{StaticResource BackgroundColor}" />
                                            </GeometryDrawing.Pen>
                                        </GeometryDrawing>
                                        <GeometryDrawing Brush="WhiteSmoke">
                                            <GeometryDrawing.Geometry>
                                                <EllipseGeometry RadiusX="0.5" RadiusY="0.5" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup.Children>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Canvas.Background>
                    <!--<ItemsControl Name="SnapGridIC"
                                  ItemsSource="{mx:MultiBinding {Binding ElementName=TheCanvas, Path=ActualWidth},
                                                                {Binding ElementName=TheCanvas, Path=ActualHeight},
                                                                {Binding Path=SnapGridWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}},
                                                                Converter={StaticResource SnapGridConverter}}"
                                  Visibility="Visible">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
                                <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Ellipse Width="1" Height="1" Fill="WhiteSmoke" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>-->
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="CanvasScaleTransform" />
                            <TranslateTransform x:Name="CanvasTranslateTransform" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
            </ScrollViewer>
            <GridSplitter Grid.Row="1" Style="{StaticResource HorizontalGridSplitter}" />
            <Grid gu:Cell.Index="2 0" gu:Grid.Layout="* , * auto">
                <avalonEdit:TextEditor Name="textEditor" gu:Cell.Index="0 0" FontFamily="Fira Code" FontSize="7pt" SyntaxHighlighting="C#">
                    $.AddConveyor(new V2d[]{(40, 50), (120, 90), (210, 60)}, false, 2);
                    $.AddConveyor(new V2d[]{(70, 100), (70, 140), (70, 170)}, false, 2);
                    $.AddConveyor(new V2d[]{(90, 100), (90, 140), (90, 170)}, false, 2);
                    $.AddConveyor(new V2d[]{(120, 100), (150, 120), (160, 150)}, false, 2);
                    $.AddConveyor(new V2d[]{(120, 90), (150, 90)}, false, 2);
                    $.AddConveyor(new V2d[]{(120, 160), (150, 160), (150, 180)}, false, 2);
                    $.AddConveyor(new V2d[]{(170, 160), (180, 160), (180, 150), (190, 150), (190, 160), (200, 160)}, false, 2);
                    $.AddConveyor(new V2d[]{(20, 20), (30, 30), (40, 20), (50, 30), (40, 40), (50, 50)}, false, 2);
                    $.AddConveyor(new V2d[]{(10, 30), (20, 40), (10, 50), (20, 60), (30, 50), (40, 60)}, false, 2);
                    $.AddConveyor(new V2d[]{(80, 30), (110, 30), (170, 20), (190, 20)}, false, 2);
                    $.AddConveyor(new V2d[]{(80, 40), (110, 40), (170, 40), (190, 40)}, false, 2);
                    $.AddConveyor(new V2d[]{(80, 50), (110, 50), (170, 60), (190, 60)}, false, 2);
                </avalonEdit:TextEditor>
                <Button Name="RunB" gu:Cell.Index="0 1" Click="RunB_Click" IsEnabled="False">
                    <TextBlock>
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
                        </TextBlock.LayoutTransform>
                        Run
                    </TextBlock>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
